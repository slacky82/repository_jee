package it.acme.nerdlittleproject;

import java.util.ArrayList;
import java.util.List;

import it.acme.nerdlittleproject.connections.Connection;
import it.acme.nerdlittleproject.connections.MainRoad;
import it.acme.nerdlittleproject.connections.Motorway;
import it.acme.nerdlittleproject.exception.InvalidItinerary;
import it.acme.nerdlittleproject.itineraries.EmptyItinerary;
import it.acme.nerdlittleproject.itineraries.Itinerary;

public class Mappy {
	
	private  List<EmptyItinerary> myItinerary;
	
	public Mappy(){
		myItinerary = new ArrayList<EmptyItinerary>();
	}

	public  void add(Connection c) throws InvalidItinerary {
		//TODO metodo add che prende una nuova connessione e restituisce void, 
		//in modo tale che la nuova connessione può essere utilizzata per costruire itinerari. 
		//Se una connessione dello stesso tipo fra le stesse città esiste già, 
		//l'aggiunta corrisponde ad un aggiornamento, 
		//ovvero la nuova connessione sostituisce la precedente.
		
		//myItinerary.get
		EmptyItinerary dummyItinerary =  new EmptyItinerary();
		dummyItinerary.add(c);
	}
	
	public Itinerary getItinerary(String cityFrom, String cityTo){
		//TODO un metodo getItinerary che è un overloading del metodo precedente 
		//che prende solamente le due città. 
		//In tal caso restituisce qualsiasi itinerario che connetta le due città. 
		//Se tale itinerario non esiste solleva un'eccezione NoSuchItinerary.
		return null;
	}


}
